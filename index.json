[
{
	"uri": "/",
	"title": "Genesys and Google - Agent Assist and DialogFlow CX Workshop",
	"tags": [],
	"description": "",
	"content": "Genesys and Google - Agent Assist and DialogFlow CX Workshop Welcome In this workshop, you will learn all about the Genesys and Google partnership. Specifically, we will focus on how Genesys Cloud CX and Google CCAI can become a dynamic duo! By the end of this workshop, you\u0026rsquo;ll have a DialogFlow CX bot and an Agent Assist Conversation profile integrated in Genesys Cloud CX.\nLearning Objectives  Set up DialogFlow CX integration Build DialogFlow CX bot and use in Architect flows Set up Agent Assist integration with Google CCAI Configure Agent Assist Conversation profile in Google Cloud Platform  Prerequisites  Genesys Cloud org \u0026amp; user with master admin privileges Google Cloud Platform account Installed the Agent Assist integration from AppFoundry Installed the DialogFlow CX integration from AppFoundry - https://help.mypurecloud.com/articles/install-the-google-cloud-dialogflow-cx-integration-from-genesys-appfoundry/  "
},
{
	"uri": "/010-genesysandgooglepartnership/10_first.html",
	"title": "Intro to Google CCAI",
	"tags": [],
	"description": "",
	"content": "CCAI stands for Contact Center Artificial Intelligence and it has three main components; Virtual Agent, Agent Assist, and Insights. Genesys integrates with Virtual Agent and with Agent Assist. Now that does not mean that Insights is not useful if a business is integrating Virtual Agent and Agent Assist with Genesys. We\u0026rsquo;ll get more into that a little bit more down the page. For now, let\u0026rsquo;s talk a bit more in depth about each of these three components.\nVirtual Agent Google CCAI Virtual Agent comes in two forms: DialogFlow CX (advanced), and DialogFlow ES (standard). Both allow you to build lifelike conversational AI bots using Google\u0026rsquo;s leading AI technology. As you might have inferred from the title of this workshop, we\u0026rsquo;re going to spend the most of our time today on DialogFlow CX. With that being said, let\u0026rsquo;s draw up some of the key differences between DialogFlow CX and DialogFlow ES.\n   DialogFlow CX DialogFlow ES     Advanced Performance Dashboards Performance Dashboards   Intuitive visual builder Form based bot builder   State of the art BERT based NLU models Standard high quality NLU models   Reuse intents and intuitively define transitions and data conditions Flat data model for simple use cases   Easily define and detect minor conversation detours Not supported   Shared intents and training phrases across flows Intents and training phrases not shared across sub-agents   Advanced multi-gurn simulator Standard simulator   Biometric voice identification to identify and verify users Not supported    Agent Assist Google CCAI Agent Assist provides three key capabilities.\n Recommend phrases used by high performing agents to improve the quality and consistency of customer experience Agents can be suggested knowledge base content in regards to a customers issue Transcribes calls in real time for agents to referecne during the call or after for analysis  Insights CCAI Insights is the one component of Google CCAI that does not have a prebuilt integration with Genesys Cloud CX. With that being said, there is nothing stopping a customer from using the Genesys Cloud API\u0026rsquo;s to pass interaction data over to Google CCAI Insights. Insights also is going to be beneficial if a customer is using either the DialogFlow CX or Agent Assist integration because customers can get relevant analtyics data about their Google resources that they built for those integrations.\n"
},
{
	"uri": "/010-genesysandgooglepartnership.html",
	"title": "The Genesys and Google Partnership",
	"tags": [],
	"description": "",
	"content": "The Genesys and Google Partnership Here at Genesys, we have been growing our relationship with Google for some time. And the joint offerings that we bring together extend much further than the extent of this workshop that we will do today. As a matter of fact, Genesys and Google have a co-innovation agreement. What does that mean exactly? That means that our two companies will work together to create new products that will help businesses transform into people-centric experiences. Our efforts will evolve, but are starting out by looking at these key areas:\n Customer journey orchestration Automated customer care with integrated IoT and customer service Predictive customer satisfaction using Genesys with Google Cloud AI AI-driven multi-factor authentication with geolocation verification Unique conversational channels from Google Search, Google Maps and other Google services  So that\u0026rsquo;s the future. If you\u0026rsquo;re more concerned with what\u0026rsquo;s happening today, we\u0026rsquo;ve got quite a list for you there as well:\n Google TTS integrated into Genesys Architect Google DialogFlow ES (this is the older version of DialogFlow CX) Genesys MultiCloud CX hosted on Google Cloud Platform Genesys MultiCloud CX Private Edition powered by Google Kubernetes Engine  And of course, what we are covering today\u0026hellip;\n Google DialogFlow CX Genesys Agent Assist powered by Google CCAI  "
},
{
	"uri": "/020-dialogflowcx.html",
	"title": "DialogFlow CX",
	"tags": [],
	"description": "",
	"content": "DialogFlow CX  Integration Setup   Building a DialogFlow CX Agent   Invoking the DialogFlow CX Agent in an Architect Flow   "
},
{
	"uri": "/020-dialogflowcx/20_second.html",
	"title": "Integration Setup",
	"tags": [],
	"description": "",
	"content": "Integration Setup  In the Google Cloud Platform console, create a new project and then create a service account for the project.  A Google Cloud project allows you to organize all your Google Cloud resources. As an example, you might have one Google Cloud project for your marketing team and another project for your sales team. Projects simply allow you to keep resources separated. A service account is a special type of account that is used to execute applications and run automated services. Service accounts allow you to grant permissions to different applications or resources in your Google environment. As an example, you might want a DialogFlow CX agent to have access to trigger Google Cloud Functions, but you wouldn\u0026rsquo;t want them to be able to deactivate a virtual machine.   Grant the following roles to the service account: \u0026ldquo;DialogFlow API Client\u0026rdquo;, \u0026ldquo;DialogFlow API Reader\u0026rdquo;, and \u0026ldquo;DialogFlow Conversation Manager\u0026rdquo; Create a service account key and download the JSON version of it. Go to the Genesys Cloud CX integrations page and find your DialogFlow CX integration. Within that integration, navigate to the credentials tab and click configure.  Now input the corresponding values from the JSON file that you downloaded in the previous step.    Video showing the steps above https://youtu.be/nvKh-yNxIKQ\n"
},
{
	"uri": "/030-agentassist/20_second.html",
	"title": "Integration Setup",
	"tags": [],
	"description": "",
	"content": "Advanced Lesson   Step one\n  Step two\n  Step three\n  "
},
{
	"uri": "/030-agentassist/30_third.html",
	"title": "Adding Your Knowledge Articles to Google Cloud Storage",
	"tags": [],
	"description": "",
	"content": "Advanced Lesson   Step one\n  Step two\n  Step three\n  "
},
{
	"uri": "/030-agentassist.html",
	"title": "Agent Assist",
	"tags": [],
	"description": "",
	"content": "Getting Started  Integration Setup   Adding Your Knowledge Articles to Google Cloud Storage   Creating a Knowledge Base   Creating the Conversation Profile   Create the Assistant for Your Queue   "
},
{
	"uri": "/020-dialogflowcx/30_third.html",
	"title": "Building a DialogFlow CX Agent",
	"tags": [],
	"description": "",
	"content": "Terminology  Agents - Agent is DialogFlow\u0026rsquo;s term for bot. An agent is a natural language understanding module that understands the nuances of human language. You design and build a Dialogflow agent to handle the types of conversations required for your system. Flows - Used to define topics and the associated conversational paths. Here\u0026rsquo;s an example of different flows that might be built for a pizza delivery agent.  Pages - Pages are configured to collect information from the end user that is relevant for the conversational state represented by the page. See the below example of different pages in blue that might be used for a Food Order flow.  Entity Types and Parameters - If you are familiar with other bot engines, you might know the term slots and slot types. Entity types and parameters are essentially the same. Entity types control how data from end users can be inputted. With entity types, many come predefined such as Number Sequence. Entity types that come predefined are called system entities and entity types that you create are called custom entities. For example, you might create a custom entity type for pizza toppings that only accepts a predefined list of topppings. Parameters capture and reference values that have been supplied by the end user. Each parameter is assigned an entity type. For example, the parameter account number might have an entity type of number sequence. Forms - A form is built for each page and it is a list of parameters that should be collected from the end user for the page. Intents - An intent categorizes a users intention based on data called training phrases. Training phrases are example phrases of what end users might type or say that would match up to the intent. Fulfillment - Fulfillment enables the virtual agent to respond to the end users question, query for information, or terminate a session. It is possible to call mutiple fulfillments during one turn. State Handlers - Used to control the conversation by creating responses for end users and/or by transitioning the current page.  Reference page - https://cloud.google.com/dialogflow/cx/docs/basics\nBuilding a DialogFlow CX Agent Today we\u0026rsquo;re going to build a virtual agent for a candy shop. The candy shop is hoping to use DialogFlow CX to accomplish two items: 1. Allow customers to place orders \u0026amp; 2. Give out store hours. Let\u0026rsquo;s get to work! Try to follow along with either the steps below or watch the video at the bottom of this page.\n Navigate to the Google CCAI Console \u0026amp; ensure that you are in the project that you created in the previous section.  https://dialogflow.cloud.google.com/cx/projects   If you receive this prompt when you navigate to the link, just enable the API.  Create a new agent and give it a descriptive name like \u0026ldquo;Candy Shop Bot\u0026rdquo; The first task we will do is edit the Default Welcome Intent. Click on the start button in the middle of the page and then on Default Welcome Intent. Under fulfillment, let\u0026rsquo;s delete the default phrases and add our own; \u0026ldquo;Thanks for chatting with the candy shop. How can we help you?\u0026rdquo; Be sure to click save.  Before we move to the next step, let\u0026rsquo;s go over the Test Agent tool. In the top right, click test agent. If you say hello, you should get back the response we just created!  Now we are going to create a couple of intents and pages. You can create intents two ways; either from the manage tab or inline. We\u0026rsquo;ll show you both ways. Pages can either be created from the build tab or inline. We will first create an intent using the manage tab and a page using the build tab.  Select the manage tab \u0026gt; intents \u0026gt; create Name this intent store.hours Enter at least 5 training phrases. Here\u0026rsquo;s two examples.  When is your store open? What are your hours? Be sure to press save after adding your training phrases   Navigate back to the build tab and then click the + sign to create a new page named \u0026ldquo;Hours\u0026rdquo; Hover over the newly created Hours page and click the 3 dots and then Edit  Edit the fulfillment field and then input some text describing your candy shops store hours. For example, \u0026ldquo;Our shop is open Monday through Saturday from 11am to 9pm.\u0026rdquo; Be sure to press save on both the fulfillment and the page.   Navigate back to the Default Start Flow and then press the Start block  Create a new route and choose store.hours from the intent drop down and under the transition section choose the Hours page.     Now we are going to create an intent and a page using the inline functionality  Click the start block under the Default Start Flow and then the + to add a new route In the intent drop down list click + new Intent, which will allow you to create a new intent directly from here  Name your new intent \u0026ldquo;Order Candy\u0026rdquo; and add some training phrases of what a customer might say if they want to order candy. Under training phrases, add the following sentences  order some gumdrops place a new order i want candy i want 500 suckers i\u0026rsquo;d like to buy 10 jawbreakers   You should notice that a parameter is automatically created when putting in your training phrases. Google is recognizing based on your inputted training phrases that you are going to need to gather the quantity of candies as a parameter for this intent. We\u0026rsquo;ll get more into adding parameters here in just a little bit.    While still editing the route, navigate down to the transition section and now let\u0026rsquo;s create a new page using inline functionality.  name this page \u0026ldquo;New Order\u0026rdquo; and then save your route     Quick check in - at this point, your graphical editor should look like this.  Next we need to add parameters to our New Order page\u0026hellip;  "
},
{
	"uri": "/030-agentassist/40_fourth.html",
	"title": "Creating a Knowledge Base",
	"tags": [],
	"description": "",
	"content": "Advanced Lesson   Step one\n  Step two\n  Step three\n  "
},
{
	"uri": "/020-dialogflowcx/40_fourth.html",
	"title": "Invoking the DialogFlow CX Agent in an Architect Flow",
	"tags": [],
	"description": "",
	"content": "Advanced Lesson   Step one\n  Step two\n  Step three\n  "
},
{
	"uri": "/030-agentassist/50_fifth.html",
	"title": "Creating the Conversation Profile",
	"tags": [],
	"description": "",
	"content": "Advanced Lesson   Step one\n  Step two\n  Step three\n  "
},
{
	"uri": "/030-agentassist/60_sixth.html",
	"title": "Create the Assistant for Your Queue",
	"tags": [],
	"description": "",
	"content": "Advanced Lesson   Step one\n  Step two\n  Step three\n  "
},
{
	"uri": "/090-conclution.html",
	"title": "Conclusion",
	"tags": [],
	"description": "",
	"content": "Conclusion Congrats! You\u0026rsquo;ve reached the end of today\u0026rsquo;s workshop. Please fill out today\u0026rsquo;s feedback form via this TODO\n "
},
{
	"uri": "/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]